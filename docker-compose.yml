version: "3.8"

services:

  server:
    image: ${DOCKER_REGISTRY}/test-server:v1.1.0
    build:
      context: .
      dockerfile: ./tools/docker/php/Dockerfile
    container_name: test-server
    environment:
      BDD_VERSION: ${MYSQL_VERSION:-5.7}
      BDD_TYPE: mysql
      BDD_HOST: mysql
      BDD_PORT: ${MYSQL_PORT:-3306}
      BDD_CHARSET: ${MYSQL_CHARSET:-utf8mb4}
      BDD_USER: ${MYSQL_USER:-user}
      BDD_PASSWORD: ${MYSQL_PASSWORD:-resu}
      BDD_DATABASE: ${MYSQL_DATABASE:-app}
    volumes:
      - ./:/var/www/html:rw
    labels:
      - "traefik.http.routers.app1.rule=Host(`test-docker-symfony.traefik.me`)"
      - "traefik.http.routers.app1-tls.tls.domains[0].main=test-docker-symfony.traefik.me"
      - "traefik.http.routers.app1-tls.tls.domains[0].sans=test-docker-symfony-*.traefik.me"
      - "traefik.http.routers.app1.tls=true"
    links:
      - mysql
      - redis

  adminer:
    image: ${DOCKER_REGISTRY}/test-adminer:v1.0.0
    build:
      context: .
      dockerfile: ./tools/docker/adminer/Dockerfile
    container_name: test-adminer
    ports:
      - 8080:8080
    volumes:
      - ./var/db:/var/www/html/var/db:rw

  mysql:
    image: mysql:${MYSQL_VERSION:-5.7}
    container_name: test-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-toor}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-resu}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: test-phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD:-toor}
    links:
      - mysql
    ports:
      - 8090:80

  mailer:
    image: schickling/mailcatcher
    container_name: test-mailcatcher
    ports: 
      - 1025:1025
      - 1080:1080
  
  redis:
    image: redis
    container_name: test-redis
    ports:
      - 6379:6379

  traefik:
    image: traefik:v2.0.2
    container_name: test-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - 8081:8080
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - ./tools/docker/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./tools/docker/traefik/tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik

  reverse-proxy-https-helper:
    image: alpine
    container_name: test-reverse-proxy
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik

volumes:
  certs:
